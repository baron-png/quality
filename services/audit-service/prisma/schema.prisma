generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  role      String // Role of the user (e.g., AUDITOR)
  tenantId  String // Tenant ID for isolation
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AcceptedAudit {
  id         String   @id @default(uuid())
  auditId    String
  auditorId  String // Store the user ID directly without a foreign key constraint
  audit      Audit    @relation(fields: [auditId], references: [id], onDelete: Cascade)
  acceptedAt DateTime @default(now())

  @@unique([auditId, auditorId]) // Composite unique constraint
}

model AuditProgram {
  id                  String   @id @default(cuid())
  name                String
  auditProgramObjective String?
  status              String
  startDate           DateTime
  endDate             DateTime
  tenantId            String
  tenantName          String
  departmentId        String? // Optional departmentId
  createdBy           String
  audits              Audit[]
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Audit {
  id                  String   @id @default(cuid())
  scope               String[]
  specificAuditObjective String[]
  methods             String[]
  criteria            String[]
  auditProgramId      String
  auditProgram        AuditProgram @relation(fields: [auditProgramId], references: [id])
  acceptedAudits      AcceptedAudit[] // Add this relation field
}
